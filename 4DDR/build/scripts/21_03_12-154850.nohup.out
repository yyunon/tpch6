
****** Vivado v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:35 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source create_dcp_from_cl.tcl
# package require tar
# set TOP top_sp
# set CL_MODULE cl_fletcher_aws_4DDR
# set timestamp           [lindex $argv  0]
# set strategy            [lindex $argv  1]
# set hdk_version         [lindex $argv  2]
# set shell_version       [lindex $argv  3]
# set device_id           [lindex $argv  4]
# set vendor_id           [lindex $argv  5]
# set subsystem_id        [lindex $argv  6]
# set subsystem_vendor_id [lindex $argv  7]
# set clock_recipe_a      [lindex $argv  8]
# set clock_recipe_b      [lindex $argv  9]
# set clock_recipe_c      [lindex $argv 10]
# set uram_option         [lindex $argv 11]
# set notify_via_sns      [lindex $argv 12]
# set VDEFINES            [lindex $argv 13]
# set cl.synth   1
# set implement  1
# puts "AWS FPGA Scripts";
AWS FPGA Scripts
# puts "Creating Design Checkpoint from Custom Logic source code";
Creating Design Checkpoint from Custom Logic source code
# puts "HDK Version:            $hdk_version";
HDK Version:            1.4.17
# puts "Shell Version:          $shell_version";
Shell Version:          0x04261818
# puts "Vivado Script Name:     $argv0";
Vivado Script Name:     create_dcp_from_cl.tcl
# puts "Strategy:               $strategy";
Strategy:               DEFAULT
# puts "PCI Device ID           $device_id";
PCI Device ID           0xF001
# puts "PCI Vendor ID           $vendor_id";
PCI Vendor ID           0x1D0F
# puts "PCI Subsystem ID        $subsystem_id";
PCI Subsystem ID        0x1D51
# puts "PCI Subsystem Vendor ID $subsystem_vendor_id";
PCI Subsystem Vendor ID 0xFEDC
# puts "Clock Recipe A:         $clock_recipe_a";
Clock Recipe A:         A0
# puts "Clock Recipe B:         $clock_recipe_b";
Clock Recipe B:         B0
# puts "Clock Recipe C:         $clock_recipe_c";
Clock Recipe C:         C0
# puts "URAM option:            $uram_option";
URAM option:            2
# puts "Notify when done:       $notify_via_sns";
Notify when done:       0
# if { [info exists ::env(CL_DIR)] } {
#         set CL_DIR $::env(CL_DIR)
#         puts "Using CL directory $CL_DIR";
# } else {
#         puts "Error: CL_DIR environment variable not defined ! ";
#         puts "Use export CL_DIR=Your_Design_Root_Directory"
#         exit 2
# }
Using CL directory /home/yyonsel/bulk/aws-build/fletcher-aws/examples/tpch6/4DDR/build/scripts/../..
# if { [info exists ::env(HDK_SHELL_DIR)] } {
#         set HDK_SHELL_DIR $::env(HDK_SHELL_DIR)
#         puts "Using Shell directory $HDK_SHELL_DIR";
# } else {
#         puts "Error: HDK_SHELL_DIR environment variable not defined ! ";
#         puts "Run the hdk_setup.sh script from the root directory of aws-fpga";
#         exit 2
# }
Using Shell directory /shares/bulk/yyonsel/aws-build/fletcher-aws/aws-fpga/hdk/common/shell_v04261818
# if { [info exists ::env(HDK_SHELL_DESIGN_DIR)] } {
#         set HDK_SHELL_DESIGN_DIR $::env(HDK_SHELL_DESIGN_DIR)
#         puts "Using Shell design directory $HDK_SHELL_DESIGN_DIR";
# } else {
#         puts "Error: HDK_SHELL_DESIGN_DIR environment variable not defined ! ";
#         puts "Run the hdk_setup.sh script from the root directory of aws-fpga";
#         exit 2
# }
Using Shell design directory /shares/bulk/yyonsel/aws-build/fletcher-aws/aws-fpga/hdk/common/shell_v04261818/design
# set implDir   $CL_DIR/build/checkpoints
# set rptDir    $CL_DIR/build/reports
# set cacheDir  $HDK_SHELL_DESIGN_DIR/cache/ddr4_phy
# puts "All reports and intermediate results will be time stamped with $timestamp";
All reports and intermediate results will be time stamped with 21_03_12-154850
# set_msg_config -id {Chipscope 16-3} -suppress
# set_msg_config -string {AXI_QUAD_SPI} -suppress
# set_msg_config -string {PIPE_CL_SH_AURORA_STAT} -suppress
# set_msg_config -string {PIPE_CL_SH_HMC_STAT} -suppress
# set_msg_config -string {PIPE_AURORA_CHANNEL_UP} -suppress
# set_msg_config -string {PIPE_HMC_IIC} -suppress
# set_msg_config -string {PIPE_SH_CL_AURORA_STAT} -suppress
# set_msg_config -id {Common 17-55}        -suppress
# set_msg_config -id {Designutils 20-1567} -suppress
# set_msg_config -id {IP_Flow 19-2162}     -suppress
# set_msg_config -id {Project 1-498}       -suppress
# set_msg_config -id {Route 35-328}        -suppress
# set_msg_config -id {Vivado 12-508}       -suppress
# set_msg_config -id {Constraints 18-4866} -suppress
# set_msg_config -id {filemgmt 56-12}      -suppress
# set_msg_config -id {Constraints 18-4644} -suppress
# set_msg_config -id {Coretcl 2-64}        -suppress
# set_msg_config -id {Vivado 12-4739}      -suppress
# set_msg_config -id {Vivado 12-5201}      -suppress
# set_msg_config -id {DRC CKLD-1}          -suppress
# set_msg_config -id {IP_Flow 19-2248}     -suppress
# set_msg_config -id {Synth 8-115}         -suppress
# set_msg_config -id {Synth 8-3936}        -suppress
# set_msg_config -id {Vivado 12-1023}      -suppress
# set_msg_config -id {Constraints 18-550}  -suppress
# set_msg_config -id {Synth 8-3295}        -suppress
# set_msg_config -id {Synth 8-3321}        -suppress
# set_msg_config -id {Synth 8-3331}        -suppress
# set_msg_config -id {Synth 8-3332}        -suppress
# set_msg_config -id {Synth 8-350}         -suppress
# set_msg_config -id {Synth 8-3848}        -suppress
# set_msg_config -id {Synth 8-3917}        -suppress
# set_msg_config -id {Synth 8-6014}        -suppress
# set_msg_config -id {Vivado 12-1580}      -suppress
# set_msg_config -id {Constraints 18-619}  -suppress
# set_msg_config -id {DRC CKLD-2}          -suppress
# set_msg_config -id {DRC REQP-1853}       -suppress
# set_msg_config -id {Timing 38-436}       -suppress
# if {[string compare $notify_via_sns "1"] == 0} {
#   if {![info exists env(EMAIL)]} {
#     puts "AWS FPGA: ([clock format [clock seconds] -format %T]) EMAIL variable empty!  Completition notification will *not* be sent!";
#     set notify_via_sns 0;
#   } else {
#     puts "AWS FPGA: ([clock format [clock seconds] -format %T]) EMAIL address for completion notification set to $env(EMAIL).";
#   }
# }
# switch $strategy {
#     "BASIC" {
#         puts "BASIC strategy."
#         source $HDK_SHELL_DIR/build/scripts/strategy_BASIC.tcl
#     }
#     "EXPLORE" {
#         puts "EXPLORE strategy."
#         source $HDK_SHELL_DIR/build/scripts/strategy_EXPLORE.tcl
#     }
#     "TIMING" {
#         puts "TIMING strategy."
#         source $HDK_SHELL_DIR/build/scripts/strategy_TIMING.tcl
#     }
#     "CONGESTION" {
#         puts "CONGESTION strategy."
#         source $HDK_SHELL_DIR/build/scripts/strategy_CONGESTION.tcl
#     }
#     "DEFAULT" {
#         puts "DEFAULT strategy."
#         source $HDK_SHELL_DIR/build/scripts/strategy_DEFAULT.tcl
#     }
#     default {
#         puts "$strategy is NOT a valid strategy. Defaulting to strategy DEFAULT."
#         source $HDK_SHELL_DIR/build/scripts/strategy_DEFAULT.tcl
#     }
# }
DEFAULT strategy.
## source $HDK_SHELL_DIR/build/scripts/params.tcl
### if {$uram_option != 2} {
###   set_param synth.elaboration.rodinMoreOptions {rt::set_parameter disableOregPackingUram true}
###   set_param physynth.ultraRAMOptOutput false
### }
### set_param hd.supportClockNetCrossDiffReconfigurablePartitions 1 
## source $HDK_SHELL_DIR/build/scripts/uram_options.tcl
### switch $uram_option {
###     "2" {
###         set synth_uram_option "-max_uram_cascade_height 2"
###         set uramHeight 2
###     }
###     "3" {
###         set synth_uram_option "-max_uram_cascade_height 3"
###         set uramHeight 3
###     }
###     "4" {
###         set synth_uram_option "-max_uram_cascade_height 1"
###         set uramHeight 4
###     }
###     default {
###         set synth_uram_option "-max_uram_cascade_height 1"
###         set uramHeight 4
###     }
### }
## set synth_options "-keep_equivalent_registers -flatten_hierarchy rebuilt $synth_uram_option"
## set synth_directive "default"
## set psip 0
## set link 1
## set opt 1
## set opt_options    ""
## set opt_directive  ""
## set opt_preHookTcl  "$HDK_SHELL_DIR/build/scripts/check_uram.tcl"
## set opt_postHookTcl "$HDK_SHELL_DIR/build/scripts/apply_debug_constraints.tcl"
## set place 1
## set place_options    ""
## set place_directive  ""
## set place_preHookTcl ""
## set place_postHookTcl ""
## set phys_opt 0
## set phys_options    ""
## set phys_directive  ""
## set phys_preHookTcl ""
## set phys_postHookTcl ""
## set route 1
## set route_options    ""
## set route_directive  ""
## set route_preHookTcl ""
## set route_postHookTcl ""
## set route_phys_opt 0
## set post_phys_options    ""
## set post_phys_directive  ""
## set post_phys_preHookTcl ""
## set post_phys_postHookTcl ""
# puts "AWS FPGA: ([clock format [clock seconds] -format %T]) Calling the encrypt.tcl.";
AWS FPGA: (15:49:07) Calling the encrypt.tcl.
# source encrypt.tcl
## set HDK_SHELL_DIR $::env(HDK_SHELL_DIR)
## set HDK_SHELL_DESIGN_DIR $::env(HDK_SHELL_DESIGN_DIR)
## set CL_DIR $::env(CL_DIR)
## set TARGET_DIR $CL_DIR/build/src_post_encryption
## set UNUSED_TEMPLATES_DIR $HDK_SHELL_DESIGN_DIR/interfaces
## if {[llength [glob -nocomplain -dir $TARGET_DIR *]] != 0} {
##   eval file delete -force [glob $TARGET_DIR/*]
## }
## file copy -force $CL_DIR/design/cl_dram_dma_defines.vh                                  $TARGET_DIR
## file copy -force $CL_DIR/design/cl_id_defines.vh                                        $TARGET_DIR
## file copy -force $CL_DIR/design/cl_dram_dma_pkg.sv                                      $TARGET_DIR
## file copy -force $CL_DIR/design/cl_fletcher_aws_4DDR.sv                                 $TARGET_DIR
## file copy -force $CL_DIR/design/cl_tst.sv                                               $TARGET_DIR
## file copy -force $CL_DIR/design/cl_int_tst.sv                                           $TARGET_DIR
## file copy -force $CL_DIR/design/mem_scrb.sv                                             $TARGET_DIR
## file copy -force $CL_DIR/design/cl_tst_scrb.sv                                          $TARGET_DIR
## file copy -force $CL_DIR/design/cl_int_slv.sv                                           $TARGET_DIR
## file copy -force $CL_DIR/design/cl_pcim_mstr.sv                                         $TARGET_DIR
## file copy -force $CL_DIR/design/cl_vio.sv                                               $TARGET_DIR
## file copy -force $CL_DIR/design/cl_dma_pcis_slv.sv                                      $TARGET_DIR
## file copy -force $CL_DIR/design/cl_ila.sv                                               $TARGET_DIR
## file copy -force $CL_DIR/design/cl_ocl_slv.sv                                           $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/util/UtilMisc_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/util/UtilInt_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/util/UtilConv_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/Stream_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/interconnect/Interconnect_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/axi/AxiReadConverter.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamArb.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/interconnect/BusReadArbiterVec.vhd  $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayConfigParse_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayConfig_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/Array_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReaderStruct.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/buffers/Buffer_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReaderNull.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReaderListPrim.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/util/UtilStr_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/interconnect/BusReadBuffer.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/buffers/BufferReaderRespCtrl.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/buffers/BufferReaderResp.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamGearboxSerializer.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamGearboxParallelizer.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamGearbox.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/buffers/BufferReaderPost.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/buffers/BufferReaderCmdGenBusReq.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/buffers/BufferReaderCmd.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/buffers/BufferReader.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReaderUnlockCombine.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamNormalizer.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReaderListSyncDecoder.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReaderListSync.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReaderList.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReaderLevel.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReaderArb.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayReader.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/Forecast_l.gen.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/vhdmmio_pkg.gen.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/mmio_pkg.gen.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/mmio.gen.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/arrays/ArrayCmdCtrlMerger.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/parallel_patterns/StreamSliceArray.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamElementCounter.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/parallel_patterns/StreamAccumulator.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/parallel_patterns/SequenceStream.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/parallel_patterns/ParallelPatterns_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/parallel_patterns/ReduceStream.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/fixed_generic_pkg_mod.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/Forecast_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/SumOp.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/ReduceStage.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamSync.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/util/UtilRam1R1W.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamFIFOCounter.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/util/UtilRam_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamFIFO.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamBuffer.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/MergeOp.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/vhlib/stream/StreamSlice.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/ALU.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/Float_to_Fixed.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/Forecast.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/Forecast_Nucleus.gen.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/Forecast_Mantle.gen.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/hardware/axi/Axi_pkg.vhd $TARGET_DIR
## file copy -force $CL_DIR/design/vhdl/AxiTop.gen.vhd $TARGET_DIR
## exec chmod +w {*}[glob $TARGET_DIR/*]
## set TOOL_VERSION $::env(VIVADO_TOOL_VERSION)
## set vivado_version [string range [version -short] 0 5]
## puts "AWS FPGA: VIVADO_TOOL_VERSION $TOOL_VERSION"
AWS FPGA: VIVADO_TOOL_VERSION v2020.1
## puts "vivado_version $vivado_version"
vivado_version 2020.1
## encrypt -k $HDK_SHELL_DIR/build/scripts/vivado_keyfile_2017_4.txt -lang verilog -quiet [glob -nocomplain -- $TARGET_DIR/*.{v,sv}] [glob -nocomplain -- $TARGET_DIR/*.vh] [glob -nocomplain -- $TARGET_DIR/*.inc]
## encrypt -k $HDK_SHELL_DIR/build/scripts/vivado_vhdl_keyfile_2017_4.txt -lang vhdl -quiet [ glob -nocomplain -- $TARGET_DIR/*.vhd? ]
# source $HDK_SHELL_DIR/build/scripts/device_type.tcl
## proc DEVICE_TYPE {} {
##     return xcvu9p-flgb2104-2-i 
## }
# source $HDK_SHELL_DIR/build/scripts/step_user.tcl -notrace
# puts "AWS FPGA: ([clock format [clock seconds] -format %T]) Calling aws_gen_clk_constraints.tcl to generate clock constraints from developer's specified recipe.";
AWS FPGA: (15:49:09) Calling aws_gen_clk_constraints.tcl to generate clock constraints from developer's specified recipe.
# source $HDK_SHELL_DIR/build/scripts/aws_gen_clk_constraints.tcl
## switch $clock_recipe_a {
##     "A0" {
##         set clk_main_a0_period        8
##         set clk_main_a0_half_period   4
##         set clk_extra_a1_period      16
##         set clk_extra_a1_half_period  8
##         set clk_extra_a2_period       5.333
##         set clk_extra_a2_half_period  2.667
##         set clk_extra_a3_period       4
##         set clk_extra_a3_half_period  2
##     }
##     "A1" {
##         set clk_main_a0_period        4
##         set clk_main_a0_half_period   2
##         set clk_extra_a1_period       8
##         set clk_extra_a1_half_period  4
##         set clk_extra_a2_period       2.667
##         set clk_extra_a2_half_period  1.333
##         set clk_extra_a3_period       2
##         set clk_extra_a3_half_period  1
##     }
##     "A2" {
##         set clk_main_a0_period        64
##         set clk_main_a0_half_period   32
##         set clk_extra_a1_period      128
##         set clk_extra_a1_half_period  64
##         set clk_extra_a2_period        8
##         set clk_extra_a2_half_period   4
##         set clk_extra_a3_period       16
##         set clk_extra_a3_half_period   8
##     }
##     default {
##         puts "$clock_recipe_a is NOT a valid clock_recipe_a."
##     }
## }
## switch $clock_recipe_b {
##     "B0" {
##         set clk_extra_b0_period       4
##         set clk_extra_b0_half_period  2
##         set clk_extra_b1_period       8
##         set clk_extra_b1_half_period  4
##     }
##     "B1" {
##         set clk_extra_b0_period       8
##         set clk_extra_b0_half_period  4
##         set clk_extra_b1_period      16
##         set clk_extra_b1_half_period  8
##     }
##     "B2" {
##         set clk_extra_b0_period       2.222
##         set clk_extra_b0_half_period  1.111
##         set clk_extra_b1_period       4.444
##         set clk_extra_b1_half_period  2.222
##     }
##     "B3" {
##         set clk_extra_b0_period       4
##         set clk_extra_b0_half_period  2
##         set clk_extra_b1_period      16
##         set clk_extra_b1_half_period  8
##     }
##     "B4" {
##         set clk_extra_b0_period       3.333
##         set clk_extra_b0_half_period  1.667
##         set clk_extra_b1_period      13.333
##         set clk_extra_b1_half_period  6.667
##     }
##     "B5" {
##         set clk_extra_b0_period       2.5
##         set clk_extra_b0_half_period  1.25
##         set clk_extra_b1_period      10
##         set clk_extra_b1_half_period  5
##     }
##     default {
##         puts "$clock_recipe_b is NOT a valid clock_recipe_b."
##     }
## }
## switch $clock_recipe_c {
##     "C0" {
##         set clk_extra_c0_period       3.333
##         set clk_extra_c0_half_period  1.667
##         set clk_extra_c1_period       2.5
##         set clk_extra_c1_half_period  1.25
##     }
##     "C1" {
##         set clk_extra_c0_period       6.667
##         set clk_extra_c0_half_period  3.333
##         set clk_extra_c1_period       5
##         set clk_extra_c1_half_period  2.5
##     }
##     "C2" {
##         set clk_extra_c0_period      13.333
##         set clk_extra_c0_half_period  6.667
##         set clk_extra_c1_period      10
##         set clk_extra_c1_half_period  5
##     }
##     "C3" {
##         set clk_extra_c0_period       5
##         set clk_extra_c0_half_period  2.5
##         set clk_extra_c1_period       3.75
##         set clk_extra_c1_half_period  1.875
##     }
##     default {
##         puts "$clock_recipe_c is NOT a valid clock_recipe_c."
##     }
## }
## if { [file exists $CL_DIR/build/constraints/cl_clocks_aws.xdc] } {
##         puts "Deleting old CL clocks constraints file since it will be replaced.";
##         file delete -force $CL_DIR/build/constraints/cl_clocks_aws.xdc
## }
Deleting old CL clocks constraints file since it will be replaced.
## set clocks_file [open "$CL_DIR/build/constraints/cl_clocks_aws.xdc" w]
## puts $clocks_file "#-------------------------------------------------------------------------"
## puts $clocks_file "# Do not edit this file! It is auto-generated from $argv0."
## puts $clocks_file "#-------------------------------------------------------------------------"
## puts $clocks_file "# Group A Clocks"
## puts $clocks_file "create_clock -period $clk_main_a0_period  -name clk_main_a0 -waveform {0.000 $clk_main_a0_half_period}  \[get_ports clk_main_a0\]"
## puts $clocks_file "create_clock -period $clk_extra_a1_period -name clk_extra_a1 -waveform {0.000 $clk_extra_a1_half_period} \[get_ports clk_extra_a1\]"
## puts $clocks_file "create_clock -period $clk_extra_a2_period -name clk_extra_a2 -waveform {0.000 $clk_extra_a2_half_period} \[get_ports clk_extra_a2\]"
## puts $clocks_file "create_clock -period $clk_extra_a3_period -name clk_extra_a3 -waveform {0.000 $clk_extra_a3_half_period} \[get_ports clk_extra_a3\]\n"
## puts $clocks_file "# Group B Clocks"
## puts $clocks_file "create_clock -period $clk_extra_b0_period -name clk_extra_b0 -waveform {0.000 $clk_extra_b0_half_period} \[get_ports clk_extra_b0\]"
## puts $clocks_file "create_clock -period $clk_extra_b1_period -name clk_extra_b1 -waveform {0.000 $clk_extra_b1_half_period} \[get_ports clk_extra_b1\]\n"
## puts $clocks_file "# Group C Clocks"
## puts $clocks_file "create_clock -period $clk_extra_c0_period -name clk_extra_c0 -waveform {0.000 $clk_extra_c0_half_period} \[get_ports clk_extra_c0\]"
## puts $clocks_file "create_clock -period $clk_extra_c1_period -name clk_extra_c1 -waveform {0.000 $clk_extra_c1_half_period} \[get_ports clk_extra_c1\]"
## close $clocks_file
# set_param hd.clockRoutingWireReduction false
# if {${cl.synth}} {
#    source -notrace ./synth_${CL_MODULE}.tcl
#    set synth_dcp ${timestamp}.CL.post_synth.dcp
# } else {
#    open_checkpoint ../checkpoints/CL.post_synth.dcp
#    set synth_dcp CL.post_synth.dcp
# }
AWS FPGA: (15:49:11) Calling aws_gen_clk_constraints.tcl to generate clock constraints from developer's specified recipe.
Deleting old CL clocks constraints file since it will be replaced.
AWS FPGA: (15:49:11) Reading developer's Custom Logic files post encryption.
AWS FPGA: Reading AWS Shell design
AWS FPGA: Reading IP blocks
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/opt/apps/xilinx/Vivado/2020.1/data/ip'.
read_ip: Time (s): cpu = 00:00:03 ; elapsed = 00:00:09 . Memory (MB): peak = 2250.000 ; gain = 0.000 ; free physical = 324 ; free virtual = 90629
WARNING: [BD 41-1661] One or more IPs have been locked in the design 'cl_axi_interconnect.bd'. Please run report_ip_status for more details and recommendations on how to fix this issue.
List of locked IPs:
cl_axi_interconnect_s00_regslice_0
cl_axi_interconnect_xbar_0
cl_axi_interconnect_axi_interconnect_0_0
cl_axi_interconnect_s01_regslice_0
cl_axi_interconnect_m00_regslice_0
cl_axi_interconnect_m03_regslice_0
cl_axi_interconnect_m02_regslice_0
cl_axi_interconnect_m01_regslice_0

AWS FPGA: Reading AWS constraints
AWS FPGA: (15:49:29) Start design synthesis.
update_compile_order: Time (s): cpu = 00:00:03 ; elapsed = 00:00:07 . Memory (MB): peak = 2524.973 ; gain = 232.105 ; free physical = 353 ; free virtual = 90366

Running synth_design for cl_fletcher_aws_4DDR /home/yyonsel/bulk/aws-build/fletcher-aws/examples/tpch6/4DDR/build/scripts/../../build/scripts [Fri Mar 12 15:49:36 2021]
Command: synth_design -top cl_fletcher_aws_4DDR -verilog_define XSDB_SLV_DIS -part xcvu9p-flgb2104-2-i -mode out_of_context -keep_equivalent_registers -flatten_hierarchy rebuilt -max_uram_cascade_height 2 -directive default
Starting synth_design
WARNING: [Vivado_Tcl 4-393] The 'Synthesis' target of the following IPs are stale, please generate the output products using the generate_target or synth_ip command before running synth_design.
/home/yyonsel/bulk/aws-build/fletcher-aws/examples/tpch6/4DDR/ip/floating_point_0/floating_point_0.xci

WARNING: [Vivado_Tcl 4-391] The following IPs are missing output products for Implementation target. These output products could be required for synthesis, please generate the output products using the generate_target or synth_ip command before running synth_design.
/shares/bulk/yyonsel/aws-build/fletcher-aws/aws-fpga/hdk/common/shell_v04261818/design/ip/axi_register_slice_light/axi_register_slice_light.xci
/shares/bulk/yyonsel/aws-build/fletcher-aws/aws-fpga/hdk/common/shell_v04261818/design/ip/axi_register_slice/axi_register_slice.xci
/shares/bulk/yyonsel/aws-build/fletcher-aws/aws-fpga/hdk/common/shell_v04261818/design/ip/dest_register_slice/dest_register_slice.xci
/shares/bulk/yyonsel/aws-build/fletcher-aws/aws-fpga/hdk/common/shell_v04261818/design/ip/src_register_slice/src_register_slice.xci

Attempting to get a license for feature 'Synthesis' and/or device 'xcvu9p'
INFO: [Common 17-349] Got license for feature 'Synthesis' and/or device 'xcvu9p'
INFO: [Vivado_Tcl 4-550] User specified maximum number of URAM that can be cascaded is 2
INFO: [Device 21-403] Loading part xcvu9p-flgb2104-2-i
INFO: [Synth 8-7079] Multithreading enabled for synth_design using a maximum of 4 processes.
INFO: [Synth 8-7078] Launching helper process for spawning children vivado processes
INFO: [Synth 8-7075] Helper process launched with PID 28773
WARNING: [Synth 8-2507] parameter declaration becomes local in cl_tst with formal parameter declaration list [/home/yyonsel/bulk/aws-build/fletcher-aws/examples/tpch6/4DDR/build/src_post_encryption/cl_tst.sv:66]
WARNING: [Synth 8-2507] parameter declaration becomes local in cl_tst with formal parameter declaration list [/home/yyonsel/bulk/aws-build/fletcher-aws/examples/tpch6/4DDR/build/src_post_encryption/cl_tst.sv:708]
---------------------------------------------------------------------------------
Starting RTL Elaboration : Time (s): cpu = 00:00:20 ; elapsed = 00:01:27 . Memory (MB): peak = 3080.605 ; gain = 218.699 ; free physical = 313 ; free virtual = 88693
---------------------------------------------------------------------------------
ERROR: [Synth 8-4169] error in use clause: package 'fixed_pkg' not found in library 'ieee_proposed' [/home/yyonsel/bulk/aws-build/fletcher-aws/examples/tpch6/4DDR/build/src_post_encryption/ALU.vhd:8]
INFO: [Synth 8-2810] unit alu ignored due to previous errors [/home/yyonsel/bulk/aws-build/fletcher-aws/examples/tpch6/4DDR/build/src_post_encryption/ALU.vhd:19]
---------------------------------------------------------------------------------
Finished RTL Elaboration : Time (s): cpu = 00:00:37 ; elapsed = 00:02:45 . Memory (MB): peak = 3367.383 ; gain = 505.477 ; free physical = 4074 ; free virtual = 85673
---------------------------------------------------------------------------------
RTL Elaboration failed
INFO: [Common 17-83] Releasing license: Synthesis
11 Infos, 10 Warnings, 0 Critical Warnings and 2 Errors encountered.
synth_design failed
ERROR: [Common 17-69] Command failed: Synthesis failed - please see the console or run log file for details

    while executing
"source -notrace ./synth_${CL_MODULE}.tcl"
    invoked from within
"if {${cl.synth}} {
   source -notrace ./synth_${CL_MODULE}.tcl
   set synth_dcp ${timestamp}.CL.post_synth.dcp
} else {
   open_checkpoint ../checkpoi..."
    (file "create_dcp_from_cl.tcl" line 217)
INFO: [Common 17-206] Exiting Vivado at Fri Mar 12 15:53:21 2021...
